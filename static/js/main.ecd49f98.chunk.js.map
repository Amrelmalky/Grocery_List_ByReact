{"version":3,"sources":["List.js","Alert.js","App.js","index.js"],"names":["List","items","removeItem","editeItem","className","map","item","id","title","key","type","onClick","Alert","msg","removeAlert","list","useEffect","timeout","setTimeout","clearTimeout","getlocalstorage","localStorage","getItem","JSON","parse","App","useState","itemName","setitemName","setList","isEditing","setIsEditing","editID","setEditID","show","alert","setAlert","showAlert","setItem","stringify","action","onSubmit","e","preventDefault","newItem","Date","getTime","toString","placeholder","value","onChange","target","length","filter","specItem","find","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ecd49f98.chunk.js","sourcesContent":["import React from \"react\";\nimport { FaEdit, FaTrash } from \"react-icons/fa\";\nconst List = ({ items, removeItem, editeItem }) => {\n  return (\n    <div className=\"grocery-list\">\n      {items.map((item) => {\n        const { id, title } = item;\n        return (\n          <article key={id} className=\"grocery-item\">\n            <p className=\"title\">{title}</p>\n            <div className=\"btn-container\">\n              <button\n                type=\"button\"\n                className=\"edit-btn\"\n                onClick={() => {\n                  editeItem(id);\n                }}\n              >\n                <FaEdit />\n              </button>\n              <button\n                type=\"button\"\n                className=\"delete-btn\"\n                onClick={() => {\n                  removeItem(id);\n                }}\n              >\n                <FaTrash />\n              </button>\n            </div>\n          </article>\n        );\n      })}\n    </div>\n\n    //\n  );\n};\n\nexport default List;\n","import React, { useEffect } from \"react\";\n\nconst Alert = ({ type, msg,removeAlert , list }) => {\n  // use useEffect for alert removal\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      removeAlert();\n    }, 3000);\n\n    return ()=>clearTimeout(timeout);\n  }, [list]);\n\n  return (\n    // we added dynamic className\n    // alert class added as default class then another class based on type of alert  { `alert alert-${type}` }\n    <p className={`alert alert-${type}`}> {msg} </p>\n  );\n};\n\nexport default Alert;\n","import React, { useState, useEffect } from \"react\";\nimport List from \"./List\";\nimport Alert from \"./Alert\";\n\n//![5] GET list item from local storage\nconst getlocalstorage = () => {\n  let list = localStorage.getItem(\"list\");\n  if (list) {\n    return JSON.parse(localStorage.getItem(\"list\"));\n  }\n  else {\n    return []\n  }\n};\n\nfunction App() {\n  //![1] set up some states\n  const [itemName, setitemName] = useState(\"\"); // name of input item inititally empty value\n  const [list, setList] = useState(getlocalstorage); // List of itmes we will iterrated over it\n  const [isEditing, setIsEditing] = useState(false); // for edit flag (edit button)\n  const [editID, setEditID] = useState(null);\n\n  /*alert is an {object} ,why? because we have more things will happend\n    alert object properties {show alert , msg in alert {edit msg or delete msg} , type : sucess or dangers\n    based on action alert will be change*/\n  const [alert, setAlert] = useState({\n    show: false,\n    msg: \"\",\n    type: \"\",\n  });\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    //Handle user input ...\n\n    // * in case of user input value = empty\n    if (!itemName) {\n      //itemName = false = empty value\n      showAlert(true, \"danger\", \"pls write something\");\n    }\n\n    // user input value && isEditing = true\n    else if (itemName && isEditing) {\n      setList(\n        //itterate over list --> list it is array of objects\n        list.map((item) => {\n          //if item.id equal editeId which assign in edite function\n          if (item.id === editID) {\n            // if yes copy last object and overwrite title with new ItemName\n            return { ...list, title: itemName };\n          }\n          return item;\n        })\n      );\n      setitemName(\"\");\n      setEditID(null);\n      setIsEditing(false);\n    }\n\n    // ![2] adding item to list of items\n    else {\n      const newItem = { id: new Date().getTime().toString(), title: itemName }; // create new item  id , title\n      setList([...list, newItem]); // adding the last list and adding the new item\n      showAlert(true, \"success\", \"new item added\");\n      setitemName(\"\");\n    }\n  };\n\n  // Create alert function\n  // that alert disappear after 3000 sec\n  const showAlert = (show, type, msg) => {\n    setAlert({ show, type, msg });\n  };\n\n  //![3] create clear all function\n  const clearAll = () => {\n    setList([]); // empty list\n    showAlert(true, \"danger\", \"All items hass been removed\"); // show alert\n  };\n\n  //![4]create remove item function & create edit function\n  const removeItem = (id) => {\n    setList(list.filter((item) => item.id !== id)); // item id which is not equal id will pass the test\n    showAlert(true, \"danger\", \"item hass been removed\");\n  };\n  const editeItem = (id) => {\n    const specItem = list.find((item) => item.id === id);\n    setitemName(specItem.title);\n    setIsEditing(true);\n    setEditID(id);\n    showAlert(true, \"scuess\", \" value edited \");\n  };\n\n  //![5] store our list item in local storage\n  // store list to local storge\n  useEffect(() => {\n    localStorage.setItem(\"list\", JSON.stringify(list));\n  }, [list]);\n\n  return (\n    <section className=\"section-center\">\n      {/* start form  */}\n      <form action=\"\" className=\"grocery-form\" onSubmit={submitHandler}>\n        {/* {...alert} we desturcture the alert object*/}\n        {alert.show && <Alert {...alert} removeAlert={showAlert} {...list} />}\n        <h3> Grocery Amr Bud</h3>\n        <div className=\"form-control\">\n          <input\n            className=\"grocery\"\n            placeholder=\"g. eggs\"\n            value={itemName}\n            onChange={(e) => {\n              setitemName(e.target.value);\n            }}\n          ></input>\n          <button className=\"submit-btn\">\n            {/* make button text dynamic  */}\n            {isEditing ? \"Edite\" : \"Submit\"}\n          </button>\n        </div>\n      </form>\n      {/* End Form */}\n\n      {/* Grocery list items */}\n      {/* This section will not appear just only have items in items list = list.length>0 */}\n      {list.length > 0 && (\n        <div className=\"grocery-container\">\n          {/* passing list of items to List component where we can itterated over it to display items */}\n          <List items={list} removeItem={removeItem} editeItem={editeItem} />\n          <button className=\"clear-btn\" onClick={clearAll}>\n            Clear All..\n          </button>\n        </div>\n      )}\n    </section>\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}